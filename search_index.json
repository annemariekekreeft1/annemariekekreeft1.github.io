[["index.html", "Portfolio 1 Introduction", " Portfolio AK 2025-01-04 1 Introduction Bijzonder multi-resistente organismen (BMRO) zijn bacteriën die resistenties hebben tegen meerde klassen antibiotica. Dit is gevaarlijk voor de volksgezondheid omdat dit kan leiden tot verhoogde sterftecijfers, ziekteduur, ingewikkeldere behandelingsmethoden en daarom hogere ziektenkosten. Een bekende multi-resistente bacterie is MRSA; deze bacterie komt veelal voor in ziekenhuizen, maar is in ~1980 ook in de samenleving aangetroffen. Vandaar dat deze variant aangegeven wordt als CA-MRSA: Community-Associated MRSA.1 Ook kunnen resistenties zich “verplaatsen” tussen domeinen. Vancomycin-resistente enterococci (VRE) kwamen in 1980 op en waren een belangrijke bron van ziekenhuisinfecties. In Europa werd VRE aangetroffen in de feces van gezonde individuen. Nadat er een link werd gevonden tussen het gebruik van het antibioticum avoparcine in de landbouw en een verhoogde prevalentie van VRE, werd dit verboden in Europa. Dit geeft duidelijk een verband weer tussen antibioticagebruik in de landbouw en de toename van antimicrobiele resistentie bij mensen. 2 Antimicrobieel beheer is essentieel om antibioticaresistentie te bestrijden en zorgt voor verantwoord gebruik van antibiotica in de gezondheidszorg en landbouw. Het omvat het juiste antibioticum kiezen, in de juiste dosering en gedurende de juiste behandelduur, om resistentie te minimaliseren en infecties effectief te behandelen. Stewardshipprogramma’s verminderen onnodig antibioticagebruik, verbeteren patiëntresultaten en voorkomen de opkomst van multiresistente bacteriën. Onderwijs aan zorgverleners en strengere landbouwvoorschriften zijn hierbij cruciaal. Technologische innovaties hebben de monitoring van antimicrobiële resistentie (AMR) getransformeerd. Whole-genome sequencing biedt gedetailleerde analyses van resistentiegenen en hun verspreiding. Geografische informatiesystemen (GIS) visualiseren resistentiepatronen, wat gerichte interventies mogelijk maakt. Bovendien maken AI en machine learning het analyseren van grote datasets mogelijk om resistentietrends te voorspellen en proactieve maatregelen te nemen. Deze innovaties verbeteren wereldwijd de surveillance en beheersing van AMR. Vanwege de risico’s van BMRO’s is het belangrijk om deze wereldwijd te monitoren. Zo wordt in Nederland de monitoring van MDR-bacteriën gecoördineerd door het Rijksinstituut voor Volksgezondheid en Milieu (RIVM). Nederland neemt deel aan het Europese EARS-Net om resistentiepatronen in zorginstellingen te volgen. Het SDa houdt toezicht op antibioticagebruik in de veeteelt, om overdracht naar mensen te beperken. Diagnostische laboratoria dragen bij aan landelijke monitoring binnen een integrale One Health-aanpak.3 4 Dit projecticum is gericht op het ontwerpen en coderen van een dashboard waarin de data van BMRO’s gevisualiseerd wordt. Er wordt nadruk gelegd op de geografische informatie, metadata en het kunnen vergelijken van nieuwe data met de al bekende gegevens. DeLeo, F. R., Otto, M., Kreiswirth, B. N., &amp; Chambers, H. F. (2010). Community-associated meticillin-resistant Staphylococcus aureus. The Lancet, 375(9725), 1557–1568. https://doi.org/10.1016/s0140-6736(09)61999-1↩︎ Bharadwaj, A., Rastogi, A., Pandey, S., Gupta, S., &amp; Sohal, J. S. (2022). Multidrug-Resistant Bacteria: Their mechanism of action and prophylaxis. BioMed Research International, 2022, 1–17. https://doi.org/10.1155/2022/5419874↩︎ Johnson, A. P. (2015). Surveillance of antibiotic resistance. Philosophical Transactions of the Royal Society B Biological Sciences, 370(1670), 20140080. https://doi.org/10.1098/rstb.2014.0080↩︎ Bijzonder resistente micro-organismen (BRMO) | RIVM. (n.d.). https://www.rivm.nl/brmo↩︎ "],["cv.html", "2 CV 2.1 3rd year 2.2 Honours projects (extracurricular) 2.3 2nd year 2.4 Extracurricular courses 2.5 Work Experience 2.6 Internship", " 2 CV 2.1 3rd year Projecticum Biomolecular Research A six months project in which research was conducted into the identification of several fresh water fish using qPCR-MCA techniques. In collaboration with Aquon. Projecticum Data Science 2.1.1 Theoretical courses Biotechnology Advanced Labtools Tumorcell Biology 2.1.2 Practical courses Project Molecular Biology Construction of a vector using the glucocorticoid receptor gene and pEGFP-Nx plasmid, consequently transforming this vector into E.coli cells, after which a colony PCR was done and the vector transfected into HEK293 cells. The cloning of the construct was validated by SDS-Page and Western Blot. 2.2 Honours projects (extracurricular) Transfection of HEK293 cells through replicative transposon integration for continues MPTX1 gene expression Intra-individual differences and effects of temperature on ɑ-amylase activity 2.3 2nd year 2.3.1 Theoretical courses Zoological research &amp; Pharmacology Immunology Molecular Biology Metabolism and muscle physiology Physiological regulation systems 2.3.2 Practical courses Project Genes &amp; Proteins ELISA, Differential centrifugation, SDS-Page and Western blot, Liquid Chromatography (Äkta-prime) Project Pharmacon Research into the effect of the active ingredient in cannabis, CBD, on Alzheimer in C.elegans (CL4176). 2.4 Extracurricular courses Data Science for Biology 2.5 Work Experience Laboratory assistent, Nutricontrol June 2024 - present Projectmanagement Office Consultant, Tafelberg Advies Oktober 2022 - July 2024 2.6 Internship DiMicheleLAB, Cambridge Under supervision of Lorenzo Di Michele To aim of this project is to add an important new functionality to the RNA-MLOs, namely the ability to act as microreactors that promote chemical reactions to occur with increased rates and specificity. Initial studies have demonstrated that enzymes such as Glucose Oxidase (GOx) and Horseradish Peroxidase (HRP) show increased catalytic activity for glucose and hydrogen peroxide oxidation, respectively, when colocalised within these constructs. This increase reaction rate extends to coupled catalytic cascade systems comprising both enzymes. The project will further seek to fine-tune reaction control by adjusting the enzyme-to-substrate ratio, tuning the ratio between both enzymes in a coupled catalytic system inside a bi-phasic RNA-MLOs system, and to explore how enzyme colocalisation within RNA-MLOs affects the catalytic activity of different enzymes, including Alkaline Phosphatase, Adenylate Kinase, and Glucose-6-Phosphate Dehydrogenase. "],["free-space-visualisation-of-scrna-sequencing-using-python.html", "3 Free Space: Visualisation of scRNA sequencing using Python 3.1 scRNA sequencing using Python 3.2 Planning 3.3 Freespace: uitwerking", " 3 Free Space: Visualisation of scRNA sequencing using Python The goal of the free space is to develop skills that are not discussed in this course. Dit biedt veel vrijheid en daarnaast ook de ruimte om jezelf te ontwikkelen in de richting van een latere baan. 3.1 scRNA sequencing using Python In februari zal ik stage lopen bij de DiMicheleLAB, in cambridge. In onze gesprekken hebben zij laten weten dat ik python en R zal gebruiken bij het verwerken van de data die ik in mijn stage zal krijgen. Ik wil daarom deze vrije ruimte gebruiken om mij alvast te verdiepen in het visualiseren van data in R. Al snel komt singlecell RNA sequencing naar boven wanneer ik zoek op verschillende analyses. Echter is het niet mogelijk om in de korte tijd, 32 uur, de hele workflow van de scRNA sequencing te leren. Ik ga me daarom focussen op de visualisatie van de data met behulp van R, specifiek de packages tidyverse, Seurat, ComplexHeatmap en circlize. 3.2 Planning Het is de bedoeling dat ik elke week 1 dag, zo’n 7 uur, besteed aan het vrije deel. Dit bekent dat er ~5 dagen besteed worden of dat de “tijd” bij elkaar optelt tot 32 uur. #kmqifsyzfw table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #kmqifsyzfw thead, #kmqifsyzfw tbody, #kmqifsyzfw tfoot, #kmqifsyzfw tr, #kmqifsyzfw td, #kmqifsyzfw th { border-style: none; } #kmqifsyzfw p { margin: 0; padding: 0; } #kmqifsyzfw .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #kmqifsyzfw .gt_caption { padding-top: 4px; padding-bottom: 4px; } #kmqifsyzfw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #kmqifsyzfw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #kmqifsyzfw .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #kmqifsyzfw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kmqifsyzfw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #kmqifsyzfw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #kmqifsyzfw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #kmqifsyzfw .gt_column_spanner_outer:first-child { padding-left: 0; } #kmqifsyzfw .gt_column_spanner_outer:last-child { padding-right: 0; } #kmqifsyzfw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #kmqifsyzfw .gt_spanner_row { border-bottom-style: hidden; } #kmqifsyzfw .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #kmqifsyzfw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #kmqifsyzfw .gt_from_md > :first-child { margin-top: 0; } #kmqifsyzfw .gt_from_md > :last-child { margin-bottom: 0; } #kmqifsyzfw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #kmqifsyzfw .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #kmqifsyzfw .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #kmqifsyzfw .gt_row_group_first td { border-top-width: 2px; } #kmqifsyzfw .gt_row_group_first th { border-top-width: 2px; } #kmqifsyzfw .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #kmqifsyzfw .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #kmqifsyzfw .gt_first_summary_row.thick { border-top-width: 2px; } #kmqifsyzfw .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kmqifsyzfw .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #kmqifsyzfw .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #kmqifsyzfw .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #kmqifsyzfw .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #kmqifsyzfw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kmqifsyzfw .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #kmqifsyzfw .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #kmqifsyzfw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #kmqifsyzfw .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #kmqifsyzfw .gt_left { text-align: left; } #kmqifsyzfw .gt_center { text-align: center; } #kmqifsyzfw .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #kmqifsyzfw .gt_font_normal { font-weight: normal; } #kmqifsyzfw .gt_font_bold { font-weight: bold; } #kmqifsyzfw .gt_font_italic { font-style: italic; } #kmqifsyzfw .gt_super { font-size: 65%; } #kmqifsyzfw .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #kmqifsyzfw .gt_asterisk { font-size: 100%; vertical-align: 0; } #kmqifsyzfw .gt_indent_1 { text-indent: 5px; } #kmqifsyzfw .gt_indent_2 { text-indent: 10px; } #kmqifsyzfw .gt_indent_3 { text-indent: 15px; } #kmqifsyzfw .gt_indent_4 { text-indent: 20px; } #kmqifsyzfw .gt_indent_5 { text-indent: 25px; } #kmqifsyzfw .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #kmqifsyzfw div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } Datum Tijd Inhoud 12 november 2 uur Vinden van een onderwerp 19 november 1 uur Python tutorial 21 november 4.5 uur Opzetten van de juiste omgeving 21 november 2 uur Tutorial; Start met hoofdstuk 1: Doublet removal 21 november 6 uur Tutorial; Hoofdstuk 2: Preprocessing 25 november 1 uur Vinden van een nieuw onderwerp 25 november 2 uur Opzetten van de juiste omgeving 30 november 3 uur tutorial: Single-cell RNAseq data visualization in R 30 november 2 uur Opzoeken van een nieuwe dataset 2 december 3 uur Toepassen van de tutorial op nieuwe data 4 december 3 uur Toepassen van de tutorial op nieuwe data 10 december 4 uur Toepassen van de tutorial op nieuwe data 11 december 2 uur Toepassen van de tutorial op nieuwe data 3.3 Freespace: uitwerking Replicating the graphs as shown in the paper “TREM2 protects from atherosclerosis by limiting necrotic core formation”, Piollet et al. (2024). doi: 10.1038/s44161-024-00429-9. Atherosclerose, veroorzaakt door de ophoping van lipiden en ontstekingen in de vaatwanden, leidt tot complicaties zoals hartaanvallen en beroertes. De lipide-sensor receptor TREM2, die sterk tot uiting komt in macrofaagschuimcellen, speelt een cruciale rol in atherosclerose. Deze studie toont aan dat TREM2-deficiëntie de vorming van necrotische kernen vergroot, terwijl activering van TREM2 deze juist vermindert in vroege atherosclerose. TREM2 is essentieel voor de efferocytose en het overleven van met lipiden beladen macrofagen, wat de balans bewaart tussen schuimcelsterfte en opruiming van dode cellen in plaques. Dit onderstreept de belangrijke rol van TREM2 in het verminderen van plaque-necrose en het behouden van vaatgezondheid bij atherosclerose. Single-cell RNA-sequencing and analysis was done on aortic cells in Ldlr−/− mice. packages &lt;- c(&quot;Seurat&quot;, &quot;ggplot2&quot;, &quot;viridis&quot;, &quot;RColorBrewer&quot;, &quot;plyr&quot;, &quot;dplyr&quot;, &quot;cowplot&quot;, &quot;tidyr&quot;, &quot;tidyverse&quot;, &quot;dittoSeq&quot;, &quot;DropletUtils&quot;, &quot;DoubletFinder&quot;, &quot;knitr&quot;, &quot;patchwork&quot;, &quot;pacman&quot;) for (pkg in packages) { if (!requireNamespace(pkg, quietly = TRUE)) { install.packages(pkg) } } pacman::p_load(Seurat, ggplot2, viridis, RColorBrewer, plyr, dplyr, cowplot, tidyr, tidyverse, dittoSeq, DropletUtils, DoubletFinder, knitr, patchwork) #Inladen van data B11.data = Read10X(&quot;/Users/annemariekekreeft/school/sc_rna_seq_oefen/TREM2_atherosclerose_Piollet/raw_data/B11/outs/filtered_feature_bc_matrix&quot;) B12.data = Read10X(&quot;/Users/annemariekekreeft/school/sc_rna_seq_oefen/TREM2_atherosclerose_Piollet/raw_data/B12/outs/filtered_feature_bc_matrix&quot;) C1.data = Read10X(&quot;/Users/annemariekekreeft/school/sc_rna_seq_oefen/TREM2_atherosclerose_Piollet/raw_data/C1/outs/filtered_feature_bc_matrix&quot;) C2.data = Read10X(&quot;/Users/annemariekekreeft/school/sc_rna_seq_oefen/TREM2_atherosclerose_Piollet/raw_data/C2/outs/filtered_feature_bc_matrix&quot;) C3.data = Read10X(&quot;/Users/annemariekekreeft/school/sc_rna_seq_oefen/TREM2_atherosclerose_Piollet/raw_data/C3/outs/filtered_feature_bc_matrix&quot;) C4.data = Read10X(&quot;/Users/annemariekekreeft/school/sc_rna_seq_oefen/TREM2_atherosclerose_Piollet/raw_data/C4/outs/filtered_feature_bc_matrix&quot;) # Maken van Seurat objecten B11 = CreateSeuratObject(counts =B11.data) B12 = CreateSeuratObject(counts =B12.data) C1 = CreateSeuratObject(counts =C1.data) C2 = CreateSeuratObject(counts =C2.data) C3 = CreateSeuratObject(counts =C3.data) C4 = CreateSeuratObject(counts =C4.data) # Normalize RNA data with log normalization B11 = NormalizeData(B11) B12 = NormalizeData(B12) C1 = NormalizeData(C1) C2 = NormalizeData(C2) C3 = NormalizeData(C3) C4 = NormalizeData(C4) ## **Quality Control Filtering** #Add the &quot;percent.mt&quot; data B11[[&quot;percent.mt&quot;]] = PercentageFeatureSet(B11, pattern = &quot;^mt-&quot;) B12[[&quot;percent.mt&quot;]] = PercentageFeatureSet(B12, pattern = &quot;^mt-&quot;) C1[[&quot;percent.mt&quot;]] = PercentageFeatureSet(C1, pattern = &quot;^mt-&quot;) C2[[&quot;percent.mt&quot;]] = PercentageFeatureSet(C2, pattern = &quot;^mt-&quot;) C3[[&quot;percent.mt&quot;]] = PercentageFeatureSet(C3, pattern = &quot;^mt-&quot;) C4[[&quot;percent.mt&quot;]] = PercentageFeatureSet(C4, pattern = &quot;^mt-&quot;) Firstly, the data was normalised and plotted. To increase quality of the data, a subset was taken (&lt;10% mt). # First subset &lt;10% mt # Filtering cells with percent.mt &lt; 10 ensures you retain only healthy cells with proper RNA integrity for downstream analyses. B11 = subset(B11, subset = percent.mt &lt; 10 &amp; nCount_RNA &lt; 20000 ) B12 = subset(B12, subset = percent.mt &lt; 10 &amp; nCount_RNA &lt; 20000 ) C1 = subset(C1, subset = percent.mt &lt; 10 &amp; nCount_RNA &lt; 20000 ) C2 = subset(C2, subset = percent.mt &lt; 10 &amp; nCount_RNA &lt; 20000 ) C3 = subset(C3, subset = percent.mt &lt; 10 &amp; nCount_RNA &lt; 20000 ) C4 = subset(C4, subset = percent.mt &lt; 10 &amp; nCount_RNA &lt; 20000 ) (#fig:combined plot B11 and B12)Figure 1: Violin plots before and after subsetting of data &lt;10% mt. nFeature_RNA shows the distribution of the number of unique genes (features) detected in each cell. The majority of cells in unfiltered B11 appear to have between 1000 and 4000 unique features, with a small number of cells exceeding 6000 features. nCount_RNA shows the total number of RNA molecules (UMI counts) detected per cell. The distribution is more skewed compared to nFeature_RNA, with most cells having counts around 5000 to 15000, while a smaller number exceed 20,000 or 30,000. percent.mt represents the percentage of mitochondrial gene expression in each cell. A heavy concentration of dots at the lower end of the nFeature_RNA could indicate low-quality cells or droplets with ambient RNA. Cells with a high percentage of mitochondrial reads (e.g., above 20%) may indicate cell stress or damage. Most cells in this dataset appear to have mitochondrial percentages below 10%, with a few outliers exceeding 40%. For further refining, the percent.mt has been set to &lt;3% # Refine QC B11 = subset(B11, subset = percent.mt &lt; 3 &amp; nCount_RNA &lt; 20000 ) B12 = subset(B12, subset = percent.mt &lt; 3 &amp; nCount_RNA &lt; 20000 ) C1 = subset(C1, subset = percent.mt &lt; 3 &amp; nCount_RNA &lt; 20000 ) C2 = subset(C2, subset = percent.mt &lt; 3 &amp; nCount_RNA &lt; 20000 ) C3 = subset(C3, subset = percent.mt &lt; 3 &amp; nCount_RNA &lt; 20000 ) C4 = subset(C4, subset = percent.mt &lt; 3 &amp; nCount_RNA &lt; 20000 ) After filtering of the data, a cluster analysis is done. Doublets need to be removed and this step is necessary to perform for DoubletFinder. ### Clustering analysis (necessary to perform for DoubletFinder) # Select the top 2000 most variable features B11 = FindVariableFeatures(B11,selection.method = &quot;vst&quot;, nfeatures = 2000) B12 = FindVariableFeatures(B12,selection.method = &quot;vst&quot;, nfeatures = 2000) C1 = FindVariableFeatures(C1,selection.method = &quot;vst&quot;, nfeatures = 2000) C2 = FindVariableFeatures(C2,selection.method = &quot;vst&quot;, nfeatures = 2000) C3 = FindVariableFeatures(C3,selection.method = &quot;vst&quot;, nfeatures = 2000) C4 = FindVariableFeatures(C4,selection.method = &quot;vst&quot;, nfeatures = 2000) # Scaling RNA data, we only scale the variable features here for efficiency B11 = ScaleData(B11, features = VariableFeatures(B11)) B12 = ScaleData(B12, features = VariableFeatures(B12)) C1 = ScaleData(C1, features = VariableFeatures(C1)) C2 = ScaleData(C2, features = VariableFeatures(C2)) C3 = ScaleData(C3, features = VariableFeatures(C3)) C4 = ScaleData(C4, features = VariableFeatures(C4)) # Run PCA B11 = RunPCA(B11, features = VariableFeatures(B11), verbose=F) B12 = RunPCA(B12, features = VariableFeatures(B12), verbose=F) C1 = RunPCA(C1, features = VariableFeatures(C1), verbose=F) C2 = RunPCA(C2, features = VariableFeatures(C2), verbose=F) C3 = RunPCA(C3, features = VariableFeatures(C3), verbose=F) C4 = RunPCA(C4, features = VariableFeatures(C4), verbose=F) # Clustering and dimensional reduction B11 = FindNeighbors(B11, reduction = &quot;pca&quot;, dims = 1:20) B12 = FindNeighbors(B12, reduction = &quot;pca&quot;, dims = 1:20) C1 = FindNeighbors(C1, reduction = &quot;pca&quot;, dims = 1:20) C2 = FindNeighbors(C2, reduction = &quot;pca&quot;, dims = 1:20) C3 = FindNeighbors(C3, reduction = &quot;pca&quot;, dims = 1:20) C4 = FindNeighbors(C4, reduction = &quot;pca&quot;, dims = 1:20) B11 = FindClusters(B11, resolution = 0.2, verbose = FALSE) B12 = FindClusters(B12, resolution = 0.2, verbose = FALSE) C1 = FindClusters(C1, resolution = 0.2, verbose = FALSE) C2 = FindClusters(C2, resolution = 0.2, verbose = FALSE) C3 = FindClusters(C3, resolution = 0.2, verbose = FALSE) C4 = FindClusters(C4, resolution = 0.2, verbose = FALSE) B11=RunUMAP(B11, dims = 1:20, verbose = F) B12=RunUMAP(B12, dims = 1:20, verbose = F) C1=RunUMAP(C1, dims = 1:20, verbose = F) C2=RunUMAP(C2, dims = 1:20, verbose = F) C3=RunUMAP(C3, dims = 1:20, verbose = F) C4=RunUMAP(C4, dims = 1:20, verbose = F) (#fig:UMAP plot B11 and B12)Figure 2: UMAP visualisation of B11 and B12. # Add library metadata B11[[&quot;Library&quot;]]=&quot;B11&quot; B12[[&quot;Library&quot;]]=&quot;B12&quot; C1[[&quot;Library&quot;]]=&quot;C1&quot; C2[[&quot;Library&quot;]]=&quot;C2&quot; C3[[&quot;Library&quot;]]=&quot;C3&quot; C4[[&quot;Library&quot;]]=&quot;C4&quot; As previously mentioned, we have to remove the doublets from the dataset. In single-cell RNA sequencing, doublets and singlets are terms used to describe the state of captured cells during sequencing. A singlet refers to a single cell that has been successfully isolated into a droplet or well for sequencing. It represents the ideal scenario in scRNA-seq, where the transcriptome of only one individual cell is captured and analyzed. A doublet occurs when two or more cells are captured together in the same droplet or well during the isolation process. This leads to the combined RNA content of the captured cells being sequenced together, which can result in mixed or spurious gene expression profiles that don’t represent a single cell type. Doublets can arise due to technical limitations during cell partitioning in platforms like droplet-based methods (e.g., 10x Genomics Chromium). Accurate distinction between singlets and doublets ensures that the scRNA-seq data faithfully represents the gene expression profiles of individual cells, which is crucial for downstream analyses like clustering, cell type identification, and differential gene expression analysis. ### Doublet Finder ### # pK Identification # let op VOOR runnen, duurt lang sweep.res.list_B11 &lt;- paramSweep(B11, PCs = 1:20, sct = FALSE) ## [1] &quot;Creating artificial doublets for pN = 5%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 10%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 15%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 20%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 25%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 30%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; sweep.res.list_B12 &lt;- paramSweep(B12, PCs = 1:20, sct = FALSE) ## [1] &quot;Creating artificial doublets for pN = 5%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 10%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 15%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 20%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 25%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 30%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; sweep.res.list_C1 &lt;- paramSweep(C1, PCs = 1:20, sct = FALSE) ## [1] &quot;Creating artificial doublets for pN = 5%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 10%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 15%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 20%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 25%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 30%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; sweep.res.list_C2 &lt;- paramSweep(C2, PCs = 1:20, sct = FALSE) ## [1] &quot;Creating artificial doublets for pN = 5%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 10%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 15%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 20%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 25%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 30%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; sweep.res.list_C3 &lt;- paramSweep(C3, PCs = 1:20, sct = FALSE) ## [1] &quot;Creating artificial doublets for pN = 5%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 10%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 15%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 20%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 25%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 30%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; sweep.res.list_C4 &lt;- paramSweep(C4, PCs = 1:20, sct = FALSE) ## [1] &quot;Creating artificial doublets for pN = 5%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 10%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 15%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 20%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 25%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; ## [1] &quot;Creating artificial doublets for pN = 30%&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Defining neighborhoods...&quot; ## [1] &quot;Computing pANN across all pK...&quot; ## [1] &quot;pK = 0.005...&quot; ## [1] &quot;pK = 0.01...&quot; ## [1] &quot;pK = 0.02...&quot; ## [1] &quot;pK = 0.03...&quot; ## [1] &quot;pK = 0.04...&quot; ## [1] &quot;pK = 0.05...&quot; ## [1] &quot;pK = 0.06...&quot; ## [1] &quot;pK = 0.07...&quot; ## [1] &quot;pK = 0.08...&quot; ## [1] &quot;pK = 0.09...&quot; ## [1] &quot;pK = 0.1...&quot; ## [1] &quot;pK = 0.11...&quot; ## [1] &quot;pK = 0.12...&quot; ## [1] &quot;pK = 0.13...&quot; ## [1] &quot;pK = 0.14...&quot; ## [1] &quot;pK = 0.15...&quot; ## [1] &quot;pK = 0.16...&quot; ## [1] &quot;pK = 0.17...&quot; ## [1] &quot;pK = 0.18...&quot; ## [1] &quot;pK = 0.19...&quot; ## [1] &quot;pK = 0.2...&quot; ## [1] &quot;pK = 0.21...&quot; ## [1] &quot;pK = 0.22...&quot; ## [1] &quot;pK = 0.23...&quot; ## [1] &quot;pK = 0.24...&quot; ## [1] &quot;pK = 0.25...&quot; ## [1] &quot;pK = 0.26...&quot; ## [1] &quot;pK = 0.27...&quot; ## [1] &quot;pK = 0.28...&quot; ## [1] &quot;pK = 0.29...&quot; ## [1] &quot;pK = 0.3...&quot; # ^ tot hier sweep.stats_B11 &lt;- summarizeSweep(sweep.res.list_B11, GT = FALSE) sweep.stats_B12 &lt;- summarizeSweep(sweep.res.list_B12, GT = FALSE) sweep.stats_C1 &lt;- summarizeSweep(sweep.res.list_C1, GT = FALSE) sweep.stats_C2 &lt;- summarizeSweep(sweep.res.list_C2, GT = FALSE) sweep.stats_C3 &lt;- summarizeSweep(sweep.res.list_C3, GT = FALSE) sweep.stats_C4 &lt;- summarizeSweep(sweep.res.list_C4, GT = FALSE) bcmvn_B11 &lt;- find.pK(sweep.stats_B11) ## NULL bcmvn_B12 &lt;- find.pK(sweep.stats_B12) ## NULL bcmvn_C1 &lt;- find.pK(sweep.stats_C1) ## NULL bcmvn_C2 &lt;- find.pK(sweep.stats_C2) ## NULL bcmvn_C3 &lt;- find.pK(sweep.stats_C3) ## NULL bcmvn_C4 &lt;- find.pK(sweep.stats_C4) ## NULL pK specifies the fraction of k-nearest neighbors in the clustering analysis that should be artificial doublets. DoubletFinder uses a neighborhood-based approach to classify cells as singlets or doublets. The pK value determines the balance between real cells and artificial doublets in the space of k-nearest neighbors during this classification. If pK is too low, there may not be enough artificial doublets to accurately model the distribution of real doublets. If pK is too high, it can overwhelm the clustering and lead to poor discrimination between real doublets and singlets. # Determine Optimal pK bcmvn.max_B11 &lt;- bcmvn_B11[which.max(bcmvn_B11$BCmetric),] bcmvn.max_B12 &lt;- bcmvn_B12[which.max(bcmvn_B12$BCmetric),] bcmvn.max_C1 &lt;- bcmvn_C1[which.max(bcmvn_C1$BCmetric),] bcmvn.max_C2 &lt;- bcmvn_C2[which.max(bcmvn_C2$BCmetric),] bcmvn.max_C3 &lt;- bcmvn_C3[which.max(bcmvn_C3$BCmetric),] bcmvn.max_C4 &lt;- bcmvn_C4[which.max(bcmvn_C4$BCmetric),] optimal.pk_B11 &lt;- bcmvn.max_B11$pK optimal.pk_B12 &lt;- bcmvn.max_B12$pK optimal.pk_C1 &lt;- bcmvn.max_C1$pK optimal.pk_C2 &lt;- bcmvn.max_C2$pK optimal.pk_C3 &lt;- bcmvn.max_C3$pK optimal.pk_C4 &lt;- bcmvn.max_C4$pK optimal.pk_B11 &lt;- as.numeric(levels(optimal.pk_B11))[optimal.pk_B11] optimal.pk_B12 &lt;- as.numeric(levels(optimal.pk_B12))[optimal.pk_B12] optimal.pk_C1 &lt;- as.numeric(levels(optimal.pk_C1))[optimal.pk_C1] optimal.pk_C2 &lt;- as.numeric(levels(optimal.pk_C2))[optimal.pk_C2] optimal.pk_C3 &lt;- as.numeric(levels(optimal.pk_C3))[optimal.pk_C3] optimal.pk_C4 &lt;- as.numeric(levels(optimal.pk_C4))[optimal.pk_C4] optimal_pk_tibble &lt;- tibble( Sample = c(&quot;B11&quot;, &quot;B12&quot;, &quot;C1&quot;, &quot;C2&quot;, &quot;C3&quot;, &quot;C4&quot;), optimal_pK = c(optimal.pk_B11, optimal.pk_B12, optimal.pk_C1, optimal.pk_C2, optimal.pk_C3, optimal.pk_C4) ) optimal_pk_tibble ## # A tibble: 6 × 2 ## Sample optimal_pK ## &lt;chr&gt; &lt;dbl&gt; ## 1 B11 0.01 ## 2 B12 0.005 ## 3 C1 0.005 ## 4 C2 0.1 ## 5 C3 0.005 ## 6 C4 0.005 # Homotypic Doublet Proportion Estimate annotations_B11=B11@meta.data$seurat_clusters annotations_B12=B12@meta.data$seurat_clusters annotations_C1=C1@meta.data$seurat_clusters annotations_C2=C2@meta.data$seurat_clusters annotations_C3=C3@meta.data$seurat_clusters annotations_C4=C4@meta.data$seurat_clusters homotypic.prop_B11 &lt;- modelHomotypic(annotations_B11) homotypic.prop_B12 &lt;- modelHomotypic(annotations_B12) homotypic.prop_C1 &lt;- modelHomotypic(annotations_C1) homotypic.prop_C2 &lt;- modelHomotypic(annotations_C2) homotypic.prop_C3 &lt;- modelHomotypic(annotations_C3) homotypic.prop_C4 &lt;- modelHomotypic(annotations_C4) nExp_poi_B11 &lt;- round(0.15*nrow(B11@meta.data)) ## Assuming 15% doublet formation rate nExp_poi_B12 &lt;- round(0.15*nrow(B12@meta.data)) nExp_poi_C1 &lt;- round(0.15*nrow(C1@meta.data)) nExp_poi_C2 &lt;- round(0.15*nrow(C2@meta.data)) nExp_poi_C3 &lt;- round(0.15*nrow(C3@meta.data)) nExp_poi_C4 &lt;- round(0.15*nrow(C4@meta.data)) nExp_poi.adj_B11 &lt;- round(nExp_poi_B11*(1-homotypic.prop_B11)) nExp_poi.adj_B12 &lt;- round(nExp_poi_B12*(1-homotypic.prop_B12)) nExp_poi.adj_C1 &lt;- round(nExp_poi_C1*(1-homotypic.prop_C1)) nExp_poi.adj_C2 &lt;- round(nExp_poi_C2*(1-homotypic.prop_C2)) nExp_poi.adj_C3 &lt;- round(nExp_poi_C3*(1-homotypic.prop_C3)) nExp_poi.adj_C4 &lt;- round(nExp_poi_C4*(1-homotypic.prop_C4)) # Run Doublet Finder B11 &lt;- doubletFinder(B11, PCs = 1:20, pN = 0.25, pK = optimal.pk_B11, nExp = nExp_poi.adj_B11, reuse.pANN = FALSE, sct = FALSE) ## [1] &quot;Creating 2342 artificial doublets...&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Computing pANN...&quot; ## [1] &quot;Classifying doublets..&quot; B12 &lt;- doubletFinder(B12, PCs = 1:20, pN = 0.25, pK = optimal.pk_B12, nExp = nExp_poi.adj_B12, reuse.pANN = FALSE, sct = FALSE) ## [1] &quot;Creating 3072 artificial doublets...&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Computing pANN...&quot; ## [1] &quot;Classifying doublets..&quot; C1 &lt;- doubletFinder(C1, PCs = 1:20, pN = 0.25, pK = optimal.pk_C1, nExp = nExp_poi.adj_C1, reuse.pANN = FALSE, sct = FALSE) ## [1] &quot;Creating 2073 artificial doublets...&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Computing pANN...&quot; ## [1] &quot;Classifying doublets..&quot; C2 &lt;- doubletFinder(C2, PCs = 1:20, pN = 0.25, pK = optimal.pk_C2, nExp = nExp_poi.adj_C2, reuse.pANN = FALSE, sct = FALSE) ## [1] &quot;Creating 3047 artificial doublets...&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Computing pANN...&quot; ## [1] &quot;Classifying doublets..&quot; C3 &lt;- doubletFinder(C3, PCs = 1:20, pN = 0.25, pK = optimal.pk_C3, nExp = nExp_poi.adj_C3, reuse.pANN = FALSE, sct = FALSE) ## [1] &quot;Creating 2444 artificial doublets...&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Computing pANN...&quot; ## [1] &quot;Classifying doublets..&quot; C4 &lt;- doubletFinder(C4, PCs = 1:20, pN = 0.25, pK = optimal.pk_C4, nExp = nExp_poi.adj_C4, reuse.pANN = FALSE, sct = FALSE) ## [1] &quot;Creating 3003 artificial doublets...&quot; ## [1] &quot;Creating Seurat object...&quot; ## [1] &quot;Normalizing Seurat object...&quot; ## [1] &quot;Finding variable genes...&quot; ## [1] &quot;Scaling data...&quot; ## [1] &quot;Running PCA...&quot; ## [1] &quot;Calculating PC distance matrix...&quot; ## [1] &quot;Computing pANN...&quot; ## [1] &quot;Classifying doublets..&quot; #Do this for B11 to C4, to be able to check and adjust the DF.classification number. head(B11@meta.data) ## orig.ident nCount_RNA nFeature_RNA percent.mt ## AAACCCAAGCACTTTG-1 SeuratProject 6145 2814 2.1480879 ## AAACCCAAGCGCTTCG-1 SeuratProject 3112 1729 1.0282776 ## AAACCCAAGTGCCCGT-1 SeuratProject 5922 2349 0.2364066 ## AAACCCACAGTTGAAA-1 SeuratProject 9442 2988 0.1059098 ## AAACCCAGTACGATCT-1 SeuratProject 5218 2126 0.1916443 ## AAACCCATCGCTACGG-1 SeuratProject 14109 3831 0.0283507 ## RNA_snn_res.0.2 seurat_clusters Library pANN_0.25_0.01_921 ## AAACCCAAGCACTTTG-1 3 3 B11 0.14893617 ## AAACCCAAGCGCTTCG-1 9 9 B11 0.06382979 ## AAACCCAAGTGCCCGT-1 1 1 B11 0.04255319 ## AAACCCACAGTTGAAA-1 0 0 B11 0.15957447 ## AAACCCAGTACGATCT-1 7 7 B11 0.17021277 ## AAACCCATCGCTACGG-1 4 4 B11 0.08510638 ## DF.classifications_0.25_0.01_921 ## AAACCCAAGCACTTTG-1 Singlet ## AAACCCAAGCGCTTCG-1 Singlet ## AAACCCAAGTGCCCGT-1 Singlet ## AAACCCACAGTTGAAA-1 Singlet ## AAACCCAGTACGATCT-1 Singlet ## AAACCCATCGCTACGG-1 Singlet #Identify the metadata column corresponding to the doublet/singlet identity identified by DoubletFinder, here &quot;DF.classifications_0.25_0.01_921&quot;, this must be adjusted for each variable Idents(B11)=&quot;DF.classifications_0.25_0.01_921&quot; Idents(B12)=&quot;DF.classifications_0.25_0.005_1146&quot; Idents(C1)=&quot;DF.classifications_0.25_0.005_774&quot; Idents(C2)=&quot;DF.classifications_0.25_0.1_1130&quot; Idents(C3)=&quot;DF.classifications_0.25_0.005_947&quot; Idents(C4)=&quot;DF.classifications_0.25_0.005_1121&quot; (#fig:doublet visualisation B11 B12)Figure 3: UMAP visualisation of B11 and B12. Nu dat we de doublets hebben geidentificeerd en gevisualiseerd, kunnen we de data opnieuw subsetten om enkel de singlets te behouden. B11_DF=subset(B11, idents = &quot;Singlet&quot;) B12_DF=subset(B12, idents = &quot;Singlet&quot;) C1_DF=subset(C1, idents = &quot;Singlet&quot;) C2_DF=subset(C2, idents = &quot;Singlet&quot;) C3_DF=subset(C3, idents = &quot;Singlet&quot;) C4_DF=subset(C4, idents = &quot;Singlet&quot;) Nu hebben we voor elk “sample” apart de data verwerkt. Om verdere analyses uit te kunnen voeren, moeten deze eerst samengevoegd, “gepoold”, worden. ########### Pool the 6 QC&#39;d libraries and proceed to analysis ############### # Add sample info B11_DF[[&quot;Sample&quot;]]=&quot;WT_1&quot; B12_DF[[&quot;Sample&quot;]]=&quot;WT_2&quot; C1_DF[[&quot;Sample&quot;]]=&quot;WT_3&quot; C2_DF[[&quot;Sample&quot;]]=&quot;KO_1&quot; C3_DF[[&quot;Sample&quot;]]=&quot;KO_2&quot; C4_DF[[&quot;Sample&quot;]]=&quot;KO_3&quot; # Add experimental condition info B11_DF[[&quot;Condition&quot;]]=&quot;WT&quot; B12_DF[[&quot;Condition&quot;]]=&quot;WT&quot; C1_DF[[&quot;Condition&quot;]]=&quot;WT&quot; C2_DF[[&quot;Condition&quot;]]=&quot;KO&quot; C3_DF[[&quot;Condition&quot;]]=&quot;KO&quot; C4_DF[[&quot;Condition&quot;]]=&quot;KO&quot; # Merge data Trem2_nuc=merge(x=B11_DF, y=list(B12_DF, C1_DF, C2_DF, C3_DF, C4_DF)) # Dimensional Reduction and clustering analysis DefaultAssay(Trem2_nuc)&lt;- &quot;RNA&quot; Trem2_nuc &lt;- NormalizeData(Trem2_nuc, verbose = FALSE) Trem2_nuc &lt;-FindVariableFeatures(Trem2_nuc, selection.method = &quot;vst&quot;, nfeatures = 2000) Trem2_nuc &lt;-ScaleData(Trem2_nuc,verbose = FALSE) Trem2_nuc &lt;-RunPCA(Trem2_nuc, verbose = FALSE) Trem2_nuc = RunUMAP(Trem2_nuc, dims=1:30,verbose = FALSE) Trem2_nuc=FindNeighbors(Trem2_nuc, dims = 1:30) Trem2_nuc=FindClusters(Trem2_nuc, resolution = 0.1) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ## ## Number of nodes: 41906 ## Number of edges: 1482810 ## ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.9756 ## Number of communities: 13 ## Elapsed time: 6 seconds (#fig:total data vis)Figure 4: UMAP of combined datasets. 10 cluster were identified using FindClusters. # When running this, an error may pop up that there isn&#39;t sufficient storage. Use rm(). Trem2_nuc &lt;- JoinLayers(Trem2_nuc) #Markers_Lineage=FindAllMarkers(Trem2_nuc, max.cells.per.ident = 250, logfc.threshold = 0.3, only.pos = T) #top20 &lt;- Markers_Lineage %&gt;% # group_by(cluster) %&gt;% # top_n(n =20 , wt = avg_log2FC) #top20 # Annotate new.cluster.ids &lt;- c(&quot;VSMC&quot;, &quot;EC_1&quot;, &quot;Adipocyte&quot;, &quot;Mac/Myelo/APC&quot;, &quot;Fibro&quot;, &quot;EC_2&quot;, &quot;Glial cells&quot;, &quot;T_Cells&quot;, &quot;B_cells&quot;, &quot;RBC&quot;, &quot;Extra_cluster&quot;) #Verschil met originele data. Dit is zelf toegevoegd. names(new.cluster.ids) &lt;- levels(Trem2_nuc) Trem2_nuc&lt;- RenameIdents(Trem2_nuc, new.cluster.ids) #Trem2_nuc &lt;- StashIdent(object = Trem2_nuc, save.name = &quot;Lineage&quot;) Trem2_nuc[[&quot;Lineage&quot;]] &lt;- Idents(Trem2_nuc) levels(Trem2_nuc)=c( &quot;EC_1&quot;, &quot;EC_2&quot;, &quot;VSMC&quot;, &quot;Fibro&quot;, &quot;Mac/Myelo/APC&quot;, &quot;Adipocyte&quot;, &quot;Glial cells&quot;, &quot;T_Cells&quot;, &quot;B_cells&quot;, &quot;RBC&quot;, &quot;Extra_cluster&quot;) # Rename to ensure alphabetical order new.cluster.ids &lt;- c(&quot;a_EC_1&quot;, &quot;b_EC_2&quot;, &quot;c_VSMC&quot;, &quot;d_Fibro&quot;, &quot;e_Mac/Myelo/APC&quot;, &quot;f_Adipocyte&quot;, &quot;g_Glial cells&quot;, &quot;h_T_Cells&quot;, &quot;i_B_cells&quot;, &quot;j_RBC&quot;, &quot;k_Extra_cluster&quot;) names(new.cluster.ids) &lt;- levels(Trem2_nuc) Trem2_nuc&lt;- RenameIdents(Trem2_nuc, new.cluster.ids) Trem2_nuc[[&quot;Lineage&quot;]] &lt;- Idents(Trem2_nuc) # Extended data Figure 6b #UMAPPlot(Trem2_nuc)+scale_color_brewer(palette = &quot;Paired&quot;) (#fig:comparing figuur 6b)Figure 5: UMAP visualization of aortic single-nucleus transcriptomes from Ldlr−/−Trem2+/+ (n = 3 females) and Ldlr−/−Trem2−/− (n = 3 females) mice after 10 weeks of HFD feeding (MPC:mononuclear phagocytes, VSMC: vascular smooth muscle cells) # Extended data Figure 6c DotPlot(Trem2_nuc, features = c(&quot;Pecam1&quot;, &quot;Tek&quot;, &quot;Emcn&quot;, &quot;Fli1&quot;, &quot;Myh11&quot;, &quot;Acta2&quot;, &quot;Dcn&quot;,&quot;Col14a1&quot;, &quot;Sirpa&quot;, &quot;Lgals3&quot;, &quot;Plin1&quot;, &quot;Slc36a2&quot;, &quot;Ncam1&quot;, &quot;Grid2&quot;, &quot;Lck&quot;, &quot;Il7r&quot;, &quot;Ighm&quot;, &quot;Ighd&quot;, &quot;Hbb-bt&quot;, &quot;Hba-a2&quot;),cols=&quot;RdYlBu&quot;)+theme(axis.text.x = element_text(angle = 90)) (#fig:comparing 6c)Figure 6: expression of marker genes defining cell lineages # Extended data Figure 8 #VlnPlot(Trem2_nuc2, &quot;Cd47&quot;, pt.size = 0, split.by = &quot;Condition&quot;)+scale_fill_manual(values = c(&quot;coral&quot;, &quot;turquoise4&quot;)) Trem2_nuc2&lt;- Trem2_nuc$Condition &lt;- factor(Trem2_nuc$Condition, levels = c(&quot;WT&quot;, &quot;KO&quot;)) VlnPlot(Trem2_nuc, &quot;Cd47&quot;, pt.size = 0, split.by = &quot;Condition&quot;) + scale_fill_manual(values = c(&quot;turquoise4&quot;, &quot;coral&quot;)) (#fig:vergelijking figure 8)Figure 7: Normalized Cd47 transcript expression in single-nucleus RNA seq data in aortic cell populations identified in Supplementary Figure 6, split according to genotype. Higher values suggest stronger expression of the Cd47 gene. Orange violins represent KO (knockout) cells, where the Cd47 gene has been disrupted. Green violins represent WT (wild type) cells, with normal Cd47 function. The width of each violin represents the density of cells at a given expression level. Wider areas suggest that more cells have that specific expression level. In some cell types (e.g., e_Mac/Myelo/APC, f_Adipocyte), the expression levels are visibly different between KO and WT: e_Mac/Myelo/APC: Higher expression in WT compared to KO; f_Adipocyte: Slightly higher expression in KO compared to WT. These differences suggest that Cd47 is differentially regulated in these populations. Trem2_nuc_mac=subset(Trem2_nuc, idents=c(&quot;e_Mac/Myelo/APC&quot;)) Trem2_nuc_mac &lt;-FindVariableFeatures(Trem2_nuc_mac, selection.method = &quot;vst&quot;, nfeatures = 2000) Trem2_nuc_mac &lt;-ScaleData(Trem2_nuc_mac,verbose = FALSE) Trem2_nuc_mac &lt;-RunPCA(Trem2_nuc_mac, verbose = FALSE) Trem2_nuc_mac = RunUMAP(Trem2_nuc_mac, dims=1:20,verbose = FALSE) Trem2_nuc_mac=FindNeighbors(Trem2_nuc_mac, dims = 1:20) suppressMessages({ Trem2_nuc_mac=FindClusters(Trem2_nuc_mac, resolution = 0.3) }) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ## ## Number of nodes: 4534 ## Number of edges: 155770 ## ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.8850 ## Number of communities: 9 ## Elapsed time: 0 seconds #UMAPPlot(Trem2_nuc_mac, label=T) ##########deze duurt ook lang man Markers_Mac=FindAllMarkers(Trem2_nuc_mac, only.pos = T) #top20_mac &lt;- Markers_Mac %&gt;% group_by(cluster) %&gt;% top_n(n = 20 , wt = avg_log2FC) #top20_mac # Annotate new.cluster.ids &lt;- c(&quot;Foamy Mac&quot;, &quot;Mac_Tgfbr1&quot;, &quot;Resident_Mac&quot;, &quot;low_quality&quot;, &quot;Mono&quot;, &quot;Cavity_Mac&quot;, &quot;Mac_Cd209+&quot;, &quot;nd&quot;, &quot;cDC2&quot;, &quot;cDC1&quot;, &quot;Mature_DC&quot;, &quot;Myelo_Padi4+&quot;) names(new.cluster.ids) &lt;- levels(Trem2_nuc_mac) Trem2_nuc_mac&lt;- RenameIdents(Trem2_nuc_mac, new.cluster.ids) Trem2_nuc_mac &lt;- StashIdent(object = Trem2_nuc_mac, save.name = &quot;MPC_Clusters&quot;) # Reorder clusters levels(Trem2_nuc_mac)=c(&quot;Resident_Mac&quot;, &quot;Mac_Cd209+&quot;, &quot;Foamy Mac&quot;, &quot;Mac_Tgfbr1&quot;, &quot;Mono&quot;, &quot;Cavity_Mac&quot;, &quot;cDC1&quot;, &quot;cDC2&quot;, &quot;Mature_DC&quot;, &quot;Myelo_Padi4+&quot;, &quot;nd&quot;, &quot;low_quality&quot;) new.cluster.ids &lt;- c(&quot;a_Resident_Mac&quot;, &quot;b_Mac_Cd209+&quot;, &quot;c_Foamy Mac&quot;, &quot;d_Mac_Tgfbr1&quot;, &quot;e_Mono&quot;, &quot;f_Cavity_Mac&quot;, &quot;g_cDC1&quot;, &quot;h_cDC2&quot;, &quot;i_Mature_DC&quot;, &quot;j_Myelo_Padi4+&quot;, &quot;k_nd&quot;, &quot;l_low_quality&quot;) names(new.cluster.ids) &lt;- levels(Trem2_nuc_mac) Trem2_nuc_mac&lt;- RenameIdents(Trem2_nuc_mac, new.cluster.ids) Trem2_nuc_mac &lt;- StashIdent(object = Trem2_nuc_mac, save.name = &quot;MPC_Clusters&quot;) #Extended Data Fig.6d #UMAPPlot(Trem2_nuc_mac)+scale_color_manual(values=c(&quot;#66C2A5&quot;, &quot;#C5A07A&quot; ,&quot;#DD927E&quot; ,&quot;#979EC1&quot;, # &quot;#BE93C6&quot;, &quot;#DB98AE&quot;, &quot;#B1C968&quot;, &quot;#CED843&quot;, # &quot;#FCD738&quot; ,&quot;#ECC978&quot;, &quot;#D2BD9F&quot;, &quot;#B3B3B3&quot;)) (#fig:vergelijking figuur 6d)Figure 8: UMAP plot of mononuclear phagocytes after subsetting and reclustering (Mac: macrophage; Myelo: myeloid cell; DC: dendritic cell; nd: not determined) #Extended Data Fig.6e DotPlot(Trem2_nuc_mac, features = c(&quot;Mrc1&quot;, &quot;F13a1&quot;,&quot;Cd163&quot;, &quot;Cd209f&quot;, &quot;Cd209g&quot;, &quot;Gpnmb&quot;, &quot;Atp6v0d2&quot;, &quot;Cd5l&quot;,&quot;Ctsl&quot;, &quot;Tgfbr1&quot;, &quot;Mgat5&quot;, &quot;Apobec1&quot;, &quot;Plac8&quot;, &quot;Ace&quot;, &quot;Itgal&quot;, &quot;Cd226&quot;, &quot;Retnla&quot;, &quot;Flt3&quot;,&quot;Dpp4&quot; , &quot;Clec9a&quot;, &quot;Cd209a&quot;, &quot;Ccr7&quot;, &quot;Padi4&quot;),cols=&quot;RdYlBu&quot;)+theme(axis.text.x = element_text(angle = 90)) (#fig:vergelijking figuur 6e)Figure 9: marker genes of mononuclear phagocyte clusters ## DE Markers in Foamy macs WT vs Trem2 directly calculated on single-cell data Foamy=subset(Trem2_nuc_mac, idents=&quot;c_Foamy Mac&quot;) Idents(Foamy)=&quot;Condition&quot; Foamy_Markers=FindMarkers(Foamy, ident.1 = &quot;WT&quot;, logfc.threshold = 0.2) # DotPlot of selected DE markers DotPlot(Foamy, features = c(&quot;Msr1&quot;, &quot;Cd36&quot;,&quot;Spp1&quot;, &quot;Cd5l&quot;, &quot;Atp6v0a1&quot;, &quot;Cd38&quot;,&quot;Bcl2&quot;),cols=&quot;RdYlBu&quot;)+theme(axis.text.x = element_text(angle = 90)) ############### Perform Pseudobulk DE analysis in WT vs KO foamy macrophages ################## # Here we only included samples where &gt;200 foamy macrophages were recovered # to avoid potential impact of outlier cells on aggregated pseudobulk count matrices ##*Create a separate object for each sample Idents(Foamy)=&quot;Sample&quot; Foamy_WT1=subset(Foamy, idents = &quot;WT_1&quot;) Foamy_WT2=subset(Foamy, idents = &quot;WT_2&quot;) Foamy_KO2=subset(Foamy, idents = &quot;KO_2&quot;) Foamy_KO3=subset(Foamy, idents = &quot;KO_3&quot;) ## Generate Pseudobulk count matrices Foamy_WT1_PSB=GetAssayData(object = Foamy_WT1, slot = &quot;counts&quot;) Foamy_WT1_PSB=as.data.frame(Foamy_WT1_PSB) Foamy_WT1_PSB=rowSums(Foamy_WT1_PSB) Foamy_WT1_PSB=as.matrix(Foamy_WT1_PSB) colnames(Foamy_WT1_PSB)=&quot;Foamy_WT1_PSB&quot; Foamy_WT2_PSB=GetAssayData(object = Foamy_WT2, slot = &quot;counts&quot;) Foamy_WT2_PSB=as.data.frame(Foamy_WT2_PSB) Foamy_WT2_PSB=rowSums(Foamy_WT2_PSB) Foamy_WT2_PSB=as.matrix(Foamy_WT2_PSB) colnames(Foamy_WT2_PSB)=&quot;Foamy_WT2_PSB&quot; Foamy_KO2_PSB=GetAssayData(object = Foamy_KO2, slot = &quot;counts&quot;) Foamy_KO2_PSB=as.data.frame(Foamy_KO2_PSB) Foamy_KO2_PSB=rowSums(Foamy_KO2_PSB) Foamy_KO2_PSB=as.matrix(Foamy_KO2_PSB) colnames(Foamy_KO2_PSB)=&quot;Foamy_KO2_PSB&quot; Foamy_KO3_PSB=GetAssayData(object = Foamy_KO3, slot = &quot;counts&quot;) Foamy_KO3_PSB=as.data.frame(Foamy_KO3_PSB) Foamy_KO3_PSB=rowSums(Foamy_KO3_PSB) Foamy_KO3_PSB=as.matrix(Foamy_KO3_PSB) colnames(Foamy_KO3_PSB)=&quot;Foamy_KO3_PSB&quot; # Merge in a single count matrix** counts_data=data.frame(Foamy_WT1_PSB, Foamy_WT2_PSB, Foamy_KO2_PSB, Foamy_KO3_PSB) # Create the col_data dataframe for DESEQ2 Sample=c(&quot;WT_1&quot;, &quot;WT_2&quot;, &quot;KO_2&quot;, &quot;KO_3&quot;) Group=c(&quot;WT&quot;, &quot;WT&quot;,&quot;KO&quot;,&quot;KO&quot;) rownames=colnames(counts_data) col_data=data.frame(Sample, Group, row.names = rownames) ## Check that all sample are there in both matrices all(colnames(counts_data) %in% rownames(col_data)) ## [1] TRUE ## Check that the are in the same order all(colnames(counts_data) == rownames(col_data)) ## [1] TRUE ## *Create DESEq2 object* library(DESeq2) Foamy_PSB_DESeq2=DESeqDataSetFromMatrix(countData = counts_data, colData = col_data, design = ~Group) # Pre-filtering keep=rowSums(counts(Foamy_PSB_DESeq2))&gt;=3 Foamy_PSB_DESeq2=Foamy_PSB_DESeq2[keep,] # Set the factor level relevel(Foamy_PSB_DESeq2$Group, ref = &#39;WT&#39;) ## [1] WT WT KO KO ## Levels: WT KO # Run DESeq Foamy_PSB_DESeq2=DESeq(Foamy_PSB_DESeq2) res=results(Foamy_PSB_DESeq2, alpha = 0.1) summary(res) ## ## out of 17503 with nonzero total read count ## adjusted p-value &lt; 0.1 ## LFC &gt; 0 (up) : 61, 0.35% ## LFC &lt; 0 (down) : 22, 0.13% ## outliers [1] : 0, 0% ## low counts [2] : 12895, 74% ## (mean count &lt; 120) ## [1] see &#39;cooksCutoff&#39; argument of ?results ## [2] see &#39;independentFiltering&#39; argument of ?results plotMA(res) # Plot selected DE genes with pheatmap (Extended Data Fig. 6f) rld &lt;- rlog( Foamy_PSB_DESeq2, fitType=&#39;mean&#39;, blind=TRUE) library(pheatmap) selected_genes=c(&quot;Hmox1&quot;, &quot;Cd38&quot;, &quot;Msr1&quot;, &quot;Bcl2&quot;) pheatmap(assay(rld)[selected_genes,], scale = &quot;row&quot;) #######end (#fig:vergelijking figuur 6f)Figure 10: expression of selected differentially expressed genes in foamy macrophages as determined from pseudo-bulk analysis of experimental replicates from the snRNA-seq data. Samples with &gt;200 foamy macrophages were included for pseudo-bulk analysis. "],["guerrilla-analytics.html", "4 Guerrilla analytics", " 4 Guerrilla analytics Folder tree van DAUR2. fs::dir_tree(here::here(&quot;DAUR2&quot;)) ## /Users/annemariekekreeft/school/dsfb2_workflows_portfolio/DAUR2 ## ├── airway_rna_sequencing ## │ ├── README.txt ## │ ├── analyses ## │ │ └── DAUR2_rna.Rmd ## │ └── raw_data ## │ └── airway_sampledata.csv ## ├── eindopdracht_DAUR2 ## │ ├── README.txt ## │ ├── eindopdracht_OC3.Rmd ## │ └── raw_data ## │ └── sample_data ## │ └── onecut_sampledata_OC3.csv ## ├── ipsc_rna_sequencing ## │ └── README.txt ## ├── metagenomics_formatief ## │ ├── README.txt ## │ └── metagenomics_formatief.Rmd ## └── metagenomics_reader ## ├── README.txt ## ├── metagenomics_reader.Rmd ## └── raw_data ## └── HU_waternet_MOCK1_composition.csv Projecticum: fs::dir_tree(here::here(&quot;../hu_plasmid_shiny&quot;)) ## /Users/annemariekekreeft/school/dsfb2_workflows_portfolio/../hu_plasmid_shiny ## ├── LICENSE ## ├── README.md ## ├── app ## │ ├── FFR_Ifelse_app.R ## │ ├── Helpers.Rmd ## │ ├── Helpers.html ## │ ├── app.R ## │ ├── data ## │ │ ├── population.csv ## │ │ └── states ## │ │ ├── ne_10m_admin_1_states_provinces.README.html ## │ │ ├── ne_10m_admin_1_states_provinces.VERSION.txt ## │ │ ├── ne_10m_admin_1_states_provinces.cpg ## │ │ ├── ne_10m_admin_1_states_provinces.dbf ## │ │ ├── ne_10m_admin_1_states_provinces.prj ## │ │ ├── ne_10m_admin_1_states_provinces.shp ## │ │ └── ne_10m_admin_1_states_provinces.shx ## │ ├── documentatie.Rmd ## │ └── documentatie.html ## ├── data ## │ ├── culture_material_meta.csv ## │ ├── gene_db.csv ## │ ├── institute_meta.csv ## │ ├── metadata.txt ## │ ├── mge_model_RIVM ## │ │ ├── mge-cluster_clusters.pbz2 ## │ │ ├── mge-cluster_embedding.pbz2 ## │ │ └── mge-cluster_unitigs.fasta ## │ ├── mge_model_custom ## │ ├── nl.csv ## │ ├── person_geo_meta.csv ## │ ├── population.csv ## │ ├── resistance_data ## │ │ ├── ncbi_genes_ab_classes.csv ## │ │ └── resfinder_gene_classes.csv ## │ └── states ## │ ├── ne_10m_admin_1_states_provinces.README.html ## │ ├── ne_10m_admin_1_states_provinces.VERSION.txt ## │ ├── ne_10m_admin_1_states_provinces.cpg ## │ ├── ne_10m_admin_1_states_provinces.dbf ## │ ├── ne_10m_admin_1_states_provinces.prj ## │ ├── ne_10m_admin_1_states_provinces.shp ## │ └── ne_10m_admin_1_states_provinces.shx ## ├── hu_plasmid_shiny.Rproj ## └── metadata.txt Workflows portfolio: ## /Users/annemariekekreeft/school/dsfb2_workflows_portfolio ## ├── 002_CV.Rmd ## ├── 003_1_freespace.Rmd ## ├── 003_2_freespace.Rmd ## ├── 004_guerrilla_analytics.Rmd ## ├── 005_repoducible_research.Rmd ## ├── 006_open_peer_review.Rmd ## ├── 007_packages.Rmd ## ├── 008.Rmd ## ├── DAUR2 ## │ ├── airway_rna_sequencing ## │ │ ├── README.txt ## │ │ ├── analyses ## │ │ │ └── DAUR2_rna.Rmd ## │ │ └── raw_data ## │ │ └── airway_sampledata.csv ## │ ├── eindopdracht_DAUR2 ## │ │ ├── README.txt ## │ │ ├── eindopdracht_OC3.Rmd ## │ │ └── raw_data ## │ │ └── sample_data ## │ │ └── onecut_sampledata_OC3.csv ## │ ├── ipsc_rna_sequencing ## │ │ └── README.txt ## │ ├── metagenomics_formatief ## │ │ ├── README.txt ## │ │ └── metagenomics_formatief.Rmd ## │ └── metagenomics_reader ## │ ├── README.txt ## │ ├── metagenomics_reader.Rmd ## │ └── raw_data ## │ └── HU_waternet_MOCK1_composition.csv ## ├── Rename.txt ## ├── _book ## │ ├── 404.html ## │ ├── _main_files ## │ │ └── figure-html ## │ │ ├── DE markers pt 2-1.png ## │ │ ├── DE markers-1.png ## │ │ ├── cars-plot-1.png ## │ │ ├── examplecars-1.png ## │ │ ├── plotting1-1.png ## │ │ ├── plotting1-2.png ## │ │ ├── plotting2-1.png ## │ │ ├── plotting3-1.png ## │ │ ├── total data vis-1.png ## │ │ ├── unnamed-chunk-3-1.png ## │ │ ├── unnamed-chunk-4-1.png ## │ │ ├── unnamed-chunk-5-1.png ## │ │ ├── unnamed-chunk-6-1.png ## │ │ ├── unnamed-chunk-7-1.png ## │ │ ├── unnamed-chunk-8-1.png ## │ │ └── unnamed-chunk-9-1.png ## │ ├── cv.html ## │ ├── exercises.html ## │ ├── free-space-visualisation-of-scrna-sequencing-using-python.html ## │ ├── freespace-uitwerking.html ## │ ├── guerrilla-analytics.html ## │ ├── images ## │ │ └── fig_6c.png ## │ ├── index.html ## │ ├── introduction-1.html ## │ ├── introduction.html ## │ ├── libs ## │ │ ├── anchor-sections-1.1.0 ## │ │ │ ├── anchor-sections-hash.css ## │ │ │ ├── anchor-sections.css ## │ │ │ └── anchor-sections.js ## │ │ ├── bsTable-3.3.7 ## │ │ │ ├── bootstrapTable.js ## │ │ │ └── bootstrapTable.min.css ## │ │ ├── gitbook-2.6.7 ## │ │ │ ├── css ## │ │ │ │ ├── fontawesome ## │ │ │ │ │ └── fontawesome-webfont.ttf ## │ │ │ │ ├── plugin-bookdown.css ## │ │ │ │ ├── plugin-clipboard.css ## │ │ │ │ ├── plugin-fontsettings.css ## │ │ │ │ ├── plugin-highlight.css ## │ │ │ │ ├── plugin-search.css ## │ │ │ │ ├── plugin-table.css ## │ │ │ │ └── style.css ## │ │ │ └── js ## │ │ │ ├── app.min.js ## │ │ │ ├── clipboard.min.js ## │ │ │ ├── jquery.highlight.js ## │ │ │ ├── plugin-bookdown.js ## │ │ │ ├── plugin-clipboard.js ## │ │ │ ├── plugin-fontsettings.js ## │ │ │ ├── plugin-search.js ## │ │ │ └── plugin-sharing.js ## │ │ ├── jquery-3.6.0 ## │ │ │ └── jquery-3.6.0.min.js ## │ │ ├── kePrint-0.0.1 ## │ │ │ └── kePrint.js ## │ │ └── lightable-0.0.1 ## │ │ └── lightable.css ## │ ├── making-an-r-package.html ## │ ├── opdrachten ## │ │ └── balbasaur.jpeg ## │ ├── open-peer-review.html ## │ ├── reproducible-research.html ## │ ├── search_index.json ## │ └── section-1.html ## ├── _bookdown_files ## ├── _main.Rmd ## ├── _main_cache ## │ └── html ## │ ├── __packages ## │ ├── unnamed-chunk-3_b36f7e0d0df2df2ebe33258e8a9af11f.RData ## │ ├── unnamed-chunk-3_b36f7e0d0df2df2ebe33258e8a9af11f.rdb ## │ ├── unnamed-chunk-3_b36f7e0d0df2df2ebe33258e8a9af11f.rdx ## │ ├── unnamed-chunk-4_229036dd63b1b6169c128197f488fcc6.RData ## │ ├── unnamed-chunk-4_229036dd63b1b6169c128197f488fcc6.rdb ## │ ├── unnamed-chunk-4_229036dd63b1b6169c128197f488fcc6.rdx ## │ ├── unnamed-chunk-5_c141f879d68d9b083051d978dcff1fdb.RData ## │ ├── unnamed-chunk-5_c141f879d68d9b083051d978dcff1fdb.rdb ## │ ├── unnamed-chunk-5_c141f879d68d9b083051d978dcff1fdb.rdx ## │ ├── unnamed-chunk-6_d036cdf5c9cb46a0a017d5ef29472b34.RData ## │ ├── unnamed-chunk-6_d036cdf5c9cb46a0a017d5ef29472b34.rdb ## │ ├── unnamed-chunk-6_d036cdf5c9cb46a0a017d5ef29472b34.rdx ## │ ├── unnamed-chunk-7_a5ab41883315a303a73f653a0fca27cc.RData ## │ ├── unnamed-chunk-7_a5ab41883315a303a73f653a0fca27cc.rdb ## │ ├── unnamed-chunk-7_a5ab41883315a303a73f653a0fca27cc.rdx ## │ ├── unnamed-chunk-8_c1717f21670337ed837b0c93449dd915.RData ## │ ├── unnamed-chunk-8_c1717f21670337ed837b0c93449dd915.rdb ## │ ├── unnamed-chunk-8_c1717f21670337ed837b0c93449dd915.rdx ## │ ├── unnamed-chunk-9_7ac09f9269b07c59a45b61002bf68966.RData ## │ ├── unnamed-chunk-9_7ac09f9269b07c59a45b61002bf68966.rdb ## │ └── unnamed-chunk-9_7ac09f9269b07c59a45b61002bf68966.rdx ## ├── _main_files ## │ └── figure-html ## │ ├── DE markers pt 2-1.png ## │ ├── DE markers-1.png ## │ ├── cars-plot-1.png ## │ ├── doublet finder-1.png ## │ ├── doublet finder-2.png ## │ ├── doublet finder-3.png ## │ ├── doublet finder-4.png ## │ ├── doublet finder-5.png ## │ ├── doublet finder-6.png ## │ ├── examplecars-1.png ## │ ├── plotting1-1.png ## │ ├── plotting1-2.png ## │ ├── plotting2-1.png ## │ ├── plotting3-1.png ## │ ├── pressure-1.png ## │ ├── total data vis-1.png ## │ ├── unnamed-chunk-3-1.png ## │ ├── unnamed-chunk-4-1.png ## │ ├── unnamed-chunk-5-1.png ## │ ├── unnamed-chunk-6-1.png ## │ ├── unnamed-chunk-7-1.png ## │ ├── unnamed-chunk-8-1.png ## │ ├── unnamed-chunk-9-1.png ## │ ├── vis1-1.png ## │ ├── vis2-1.png ## │ ├── visu1-1.png ## │ └── visu2-1.png ## ├── data ## │ └── CE.LIQ.FLOW.062_Tidydata.xlsx ## ├── dsfb2_workflows_portfolio.Rproj ## ├── images ## │ ├── UMAP_B11_B12.png ## │ ├── doublets_B11_B12.png ## │ ├── fig_6b.png ## │ ├── fig_6c.png ## │ ├── fig_6d.png ## │ ├── fig_6e.png ## │ ├── fig_6f.png ## │ ├── fig_8.png ## │ └── subsetting_B11_B12.png ## ├── index.Rmd ## ├── packages.bib ## └── sc_rna_seq_oefen ## ├── UMAP_B11_B12.png ## ├── doublets_B11_B12.png ## ├── fig_6b.png ## ├── fig_6c.png ## ├── fig_6d.png ## ├── fig_6e.png ## ├── fig_6f.png ## ├── fig_8.png ## └── subsetting_B11_B12.png Workflow exercises: fs::dir_tree(here::here(&quot;../dsfb2_workflows_exercises&quot;)) ## /Users/annemariekekreeft/school/dsfb2_workflows_portfolio/../dsfb2_workflows_exercises ## ├── App-1 ## │ └── app.R ## ├── Naamloos.Rmd ## ├── Naamloos.html ## ├── Naamloos2.Rmd ## ├── Naamloos2.html ## ├── Naamloos_files ## │ ├── figure-html ## │ │ └── unnamed-chunk-3-1.png ## │ └── libs ## │ ├── bootstrap ## │ │ ├── bootstrap-icons.css ## │ │ ├── bootstrap-icons.woff ## │ │ ├── bootstrap.min.css ## │ │ └── bootstrap.min.js ## │ ├── clipboard ## │ │ └── clipboard.min.js ## │ └── quarto-html ## │ ├── anchor.min.js ## │ ├── popper.min.js ## │ ├── quarto-syntax-highlighting.css ## │ ├── quarto.js ## │ ├── tippy.css ## │ └── tippy.umd.min.js ## ├── census-app ## │ ├── data ## │ │ └── counties.rds ## │ └── helpers.R ## ├── data ## │ ├── 13059_2016_1044_MOESM1_ESM.xlsx ## │ ├── FancySuppTable2.xls ## │ ├── README.txt ## │ ├── app-1 ## │ │ └── app.R ## │ ├── data_log.xlsx ## │ └── salmonella CFU kinetics OD600 in LB van ipecs 8okt2020 kleur.xlsx ## ├── dsfb2_workflows_exercises.Rproj ## ├── leaflet_try.R ## ├── les3_exercises.Rmd ## ├── les4.Rmd ## ├── les5.Rmd ## ├── les5_2.Rmd ## ├── newspaper_app ## │ ├── 20240708_ Totaaloverzicht_newspaper-titles_csv.csv ## │ ├── BritishAndIrishNewspapersTitleList_20191118 ## │ │ └── BritishAndIrishNewspapers_18112019_README.txt ## │ ├── BritishAndIrishNewspapersTitleList_20191118.csv ## │ ├── UntitledR.R ## │ ├── app.R ## │ ├── newspaper_coordinates.csv ## │ └── nl.csv ## ├── oefenenmetRshiny.R ## └── provincies ## └── app.R "],["reproducible-research.html", "5 Reproducible Research 5.1 C.elegans plate experiment", " 5 Reproducible Research 5.1 C.elegans plate experiment library(readxl) library(dplyr) library(ggplot2) library(toolboxr) # A &amp; B excel_sheets(&quot;/Users/annemariekekreeft/school/dsfb2_workflows_portfolio/data/CE.LIQ.FLOW.062_Tidydata.xlsx&quot;) ## [1] &quot;expParameters&quot; &quot;expLookup&quot; &quot;changes&quot; &quot;example input&quot; opdracht4&lt;- read_xlsx(&quot;/Users/annemariekekreeft/school/dsfb2_workflows_portfolio/data/CE.LIQ.FLOW.062_Tidydata.xlsx&quot;, sheet = &quot;expParameters&quot;) # C. opdracht4$compConcentration &lt;- as.numeric(as.character(opdracht4$compConcentration)) ## Warning: NAs introduced by coercion # D. opdracht4 %&gt;% ggplot(aes(x = compConcentration, y = RawData, colour = compName, shape = expType)) + geom_jitter(size = 3, width = 0.1, height = 0) + # Add jitter with control over the x and y spread theme_classic() + rotate_axis_labels(axis = &quot;x&quot;, angle = 60) + scale_x_log10() ## Warning in scale_x_log10(): log-10 transformation introduced infinite values. ## Warning: Removed 6 rows containing missing values or values ## outside the scale range (`geom_point()`). opdracht4 %&gt;% ggplot(aes(x = compConcentration, y = RawData, colour = compName, shape = expType)) + geom_jitter() + # Add jitter with control over the x and y spread theme_classic() + rotate_axis_labels(axis = &quot;x&quot;, angle = 60) + scale_x_log10() ## Warning in scale_x_log10(): log-10 transformation introduced infinite values. ## Removed 6 rows containing missing values or values ## outside the scale range (`geom_point()`). Figuur x: RawData counts bij verschillende . (G) The positive control for this experiment is ethanol, depicted as the green triangles. (H) The negative control for this experiment is s-medium, depicted as the pink circles. 1. Inspecteer de gegevens Laad en inspecteer de dataset om ervoor te zorgen dat er geen ontbrekende of onjuiste waarden zijn. Zorg ervoor dat de gegevens correct zijn opgemaakt. Zet indien nodig categorische variabelen zoals compName of expType om in factoren. 2. Visualisatie van de gegevens Dose-Response Curves: Maak een scatterplot of lijngrafiek van het aantal nakomelingen (RawData) versus de concentratie (compConcentration) voor elke verbinding (compName), gegroepeerd op basis van expType. Gebruik kleur- of vormaanduidingen om de verbindingen te onderscheiden. Je kunt een log10-transformatie toepassen op de x-as (compConcentration) om de concentratie op een logaritmische schaal weer te geven, wat typisch is in dose-response analyses. 3. Statistische Analyse Gebruik een generalized linear model (GLM) met een log-transformatie van de concentratie als “predictor” en het aantal nakomelingen als afhankelijke variabele. Om de concentratie-responsrelatie, IC50, te analyseren, gebruik je een niet-lineaire regressie, bijvoorbeeld logistische regressie. 4. Bepaal het Effect van Verbindingen op IC50 Haal de IC50-schattingen uit de dose-response curves voor elke verbinding. Je kunt de IC50-waarden berekenen als de concentratie waarbij het aantal nakomelingen 50% van het maximale effect (bovenste waarde) bereikt. Vervolgens vergelijk je de IC50-waarden tussen de verbindingen om te bepalen of er significante verschillen zijn. Hierbij kan je bijvoorbeeld een ANOVA test gebruiken om de IC50-waarden voor elke verbinding te vergelijken. df_normalized &lt;- opdracht4 %&gt;% mutate(controlMean = mean(RawData[expType == &quot;controlNegative&quot;], na.rm = TRUE)) %&gt;% mutate(RawData_normalized = RawData / controlMean) %&gt;% select(-controlMean) df_normalized %&gt;% ggplot(aes(x = compConcentration, y = RawData_normalized, colour = compName, shape = expType)) + geom_jitter(size = 3, width = 0.1, height = 0) + # Add jitter with control over the x and y spread theme_classic() + rotate_axis_labels(axis = &quot;x&quot;, angle = 60) + scale_x_log10() ## Warning in scale_x_log10(): log-10 transformation introduced infinite values. ## Warning: Removed 6 rows containing missing values or values ## outside the scale range (`geom_point()`). df_normalized %&gt;% ggplot(aes(x = compConcentration, y = RawData_normalized, colour = compName, shape = expType)) + geom_jitter() + # Add jitter with control over the x and y spread theme_classic() + rotate_axis_labels(axis = &quot;x&quot;, angle = 60) + scale_x_log10() ## Warning in scale_x_log10(): log-10 transformation introduced infinite values. ## Warning: Removed 6 rows containing missing values or values ## outside the scale range (`geom_point()`). "],["open-peer-review.html", "6 Open peer review 6.1 Part 1 6.2 Part 2", " 6 Open peer review 6.1 Part 1 Natural compound screening predicts novel GSK-3 isoform-specific inhibitors View ORCID Profile_Firdos Ahmad, Anamika Gupta, Hezlin Marzook, James R. Woodgett, Mohamed A. Saleh, Rizwan Qaisar doi: https://doi.org/10.1101/2024.04.22.590490 This study screened 70 natural compounds to identify isoform-specific inhibitors of glycogen synthase kinase-3 (GSK-3), which is implicated in various diseases. Using in silico docking and biochemical assays, two compounds—Psoralidin and Rosmarinic acid—were found to inhibit GSK-3α and GSK-3β, respectively. Psoralidin showed stronger inhibition of GSK-3α (IC50 = 2.26 µM), while Rosmarinic acid was more effective against GSK-3β (IC50 = 2.24 µM). These findings suggest their potential as targeted GSK-3 inhibitors for treating cardiovascular, metabolic, and neurological disorders. library(gt) library(tidyverse) data &lt;- data.frame( &quot;Transparency criteria&quot; = c(&quot;Study Purpose&quot;, &quot;Data Availability Statement&quot;, &quot;Data Location&quot;, &quot;Study Location&quot;, &quot;Author Review&quot;, &quot;Ethics Statement&quot;, &quot;Funding Statement&quot;, &quot;Code Availability&quot;), &quot;Defenition&quot; = c(&quot;A concise statement in the introduction of the article, often in the last paragraph, that establishes the reason the research was conducted. Also called the study objective.&quot;, &quot;A statement, in an individual section offset from the main body of text, that explains how or if one can access a study’s data. The title of the section may vary, but it must explicitly mention data; it is therefore distinct from a supplementary materials section.&quot;, &quot;Where the article’s data can be accessed, either raw or processed.&quot;, &quot;Author has stated in the methods section where the study took place or the data’s country/region of origin.&quot;, &quot;The professionalism of the contact information that the author has provided in the manuscript. &quot;, &quot;A statement within the manuscript indicating any ethical concerns, including the presence of sensitive data.&quot;, &quot;A statement within the manuscript indicating whether or not the authors received funding for their research.&quot;, &quot;Authors have shared access to the most updated code that they used in their study, including code used for analysis.&quot;), &quot;Response type&quot; = c(&quot;Binary&quot;, &quot;Binary&quot;, &quot;Found Value&quot;, &quot;Found Value, Binary&quot;, &quot;Found Value&quot;, &quot;Binary&quot;, &quot;Binary&quot;, &quot;Binary&quot;), &quot;Voldaan?&quot; = c(&quot;Ja&quot;, &quot;Ja&quot;, &quot;Data van de tabellen is te vinden onder het kopje supplementary material. Data kan opgevraagd worden van de auteur. Dus, nee&quot;, &quot;Nee&quot;, &quot;Staat beschreven in info/history.&quot;, &quot;Ja&quot;, &quot;Ja&quot;, &quot;Ja&quot;) ) data %&gt;% gt() #nrsauujvnj table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #nrsauujvnj thead, #nrsauujvnj tbody, #nrsauujvnj tfoot, #nrsauujvnj tr, #nrsauujvnj td, #nrsauujvnj th { border-style: none; } #nrsauujvnj p { margin: 0; padding: 0; } #nrsauujvnj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #nrsauujvnj .gt_caption { padding-top: 4px; padding-bottom: 4px; } #nrsauujvnj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #nrsauujvnj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #nrsauujvnj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nrsauujvnj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nrsauujvnj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nrsauujvnj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #nrsauujvnj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #nrsauujvnj .gt_column_spanner_outer:first-child { padding-left: 0; } #nrsauujvnj .gt_column_spanner_outer:last-child { padding-right: 0; } #nrsauujvnj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #nrsauujvnj .gt_spanner_row { border-bottom-style: hidden; } #nrsauujvnj .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #nrsauujvnj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #nrsauujvnj .gt_from_md > :first-child { margin-top: 0; } #nrsauujvnj .gt_from_md > :last-child { margin-bottom: 0; } #nrsauujvnj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #nrsauujvnj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #nrsauujvnj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #nrsauujvnj .gt_row_group_first td { border-top-width: 2px; } #nrsauujvnj .gt_row_group_first th { border-top-width: 2px; } #nrsauujvnj .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nrsauujvnj .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #nrsauujvnj .gt_first_summary_row.thick { border-top-width: 2px; } #nrsauujvnj .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nrsauujvnj .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nrsauujvnj .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #nrsauujvnj .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #nrsauujvnj .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #nrsauujvnj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nrsauujvnj .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nrsauujvnj .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nrsauujvnj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nrsauujvnj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nrsauujvnj .gt_left { text-align: left; } #nrsauujvnj .gt_center { text-align: center; } #nrsauujvnj .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #nrsauujvnj .gt_font_normal { font-weight: normal; } #nrsauujvnj .gt_font_bold { font-weight: bold; } #nrsauujvnj .gt_font_italic { font-style: italic; } #nrsauujvnj .gt_super { font-size: 65%; } #nrsauujvnj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #nrsauujvnj .gt_asterisk { font-size: 100%; vertical-align: 0; } #nrsauujvnj .gt_indent_1 { text-indent: 5px; } #nrsauujvnj .gt_indent_2 { text-indent: 10px; } #nrsauujvnj .gt_indent_3 { text-indent: 15px; } #nrsauujvnj .gt_indent_4 { text-indent: 20px; } #nrsauujvnj .gt_indent_5 { text-indent: 25px; } #nrsauujvnj .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #nrsauujvnj div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } Transparency.criteria Defenition Response.type Voldaan. Study Purpose A concise statement in the introduction of the article, often in the last paragraph, that establishes the reason the research was conducted. Also called the study objective. Binary Ja Data Availability Statement A statement, in an individual section offset from the main body of text, that explains how or if one can access a study’s data. The title of the section may vary, but it must explicitly mention data; it is therefore distinct from a supplementary materials section. Binary Ja Data Location Where the article’s data can be accessed, either raw or processed. Found Value Data van de tabellen is te vinden onder het kopje supplementary material. Data kan opgevraagd worden van de auteur. Dus, nee Study Location Author has stated in the methods section where the study took place or the data’s country/region of origin. Found Value, Binary Nee Author Review The professionalism of the contact information that the author has provided in the manuscript. Found Value Staat beschreven in info/history. Ethics Statement A statement within the manuscript indicating any ethical concerns, including the presence of sensitive data. Binary Ja Funding Statement A statement within the manuscript indicating whether or not the authors received funding for their research. Binary Ja Code Availability Authors have shared access to the most updated code that they used in their study, including code used for analysis. Binary Ja 6.2 Part 2 Share the code, not just the data: A case study of the reproducibility of articles published in the Journal of Memory and Language under the open data policy; Paper 2. Data is te vinden in: https://osf.io/324jm/files/osfstorage. Code is te vinden in: https://osf.io/324jm/files/osfstorage In deze paper hebben de auteurs gekeken naar de reproducibility van verschillende papers. Met deze code is dus geprobeerd dezelfde grafieken te maken en hier dezelfde conclusies uit te trekken. Omdat de gebruikte paper geanonimizeerd zijn, zegt de data verder niks over de onderwerpen van de studie. Zie github, Veranderingen zijn aangegeven met comments. Raw cloze probability: library(tidyverse) library(lme4) ## Loading required package: Matrix ## ## Attaching package: &#39;Matrix&#39; ## The following object is masked from &#39;package:spam&#39;: ## ## det ## The following object is masked from &#39;package:S4Vectors&#39;: ## ## expand ## The following objects are masked from &#39;package:tidyr&#39;: ## ## expand, pack, unpack library(lmerTest) ## ## Attaching package: &#39;lmerTest&#39; ## The following object is masked from &#39;package:lme4&#39;: ## ## lmer ## The following object is masked from &#39;package:stats&#39;: ## ## step library(mgcv) ## Loading required package: nlme ## ## Attaching package: &#39;nlme&#39; ## The following object is masked from &#39;package:lme4&#39;: ## ## lmList ## The following object is masked from &#39;package:IRanges&#39;: ## ## collapse ## The following object is masked from &#39;package:dplyr&#39;: ## ## collapse ## This is mgcv 1.9-1. For overview type &#39;help(&quot;mgcv-package&quot;)&#39;. library(ggplot2) library(dosresmeta) ## Loading required package: mvmeta ## This is mvmeta 1.0.3. For an overview type: help(&#39;mvmeta-package&#39;). ## This is dosresmeta 2.0.1. For an overview type: help(&#39;dosresmeta-package&#39;). Log-transformed cloze probability: The patterns from Fig. 1 hold, the plots seem similar enough. Trying to reproduce GAMMs analysis. Raw cloze probability: Log-transformed cloze probability: The patterns from Fig. 1 hold, the plots seem similar enough. 5, very easy. "],["making-an-r-package.html", "7 Making an R Package", " 7 Making an R Package Download the package with the following: devtools::install_github(\"annemariekekreeft1/dnaInfo\", dependencies = TRUE, build_vignettes = TRUE) Vervolgens kan je de vignette zien: vignette(\"dnaInfo\") "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
